package hogwarts;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.ScrollableResults;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.hibernate.query.Query;

public class Principal {

	public static void main(String[] args) {
			
			//Inicializamos el entorno Hibernate
			Configuration cfg = new Configuration().configure();
			
			//crear el ejemplar de session factory
			SessionFactory sf = cfg.buildSessionFactory(new StandardServiceRegistryBuilder().configure().build());
			
			//abrir la sesion
			Session sesion = sf.openSession();
			
			//llamada a ejercicios
			ejercicio1(sesion);
			ejercicio2(sesion);
			ejercicio3(sesion);
			
			//ejercicio
			
			//cerrar la sesion
			sf.close();

		}
		
		public static void ejercicio1(Session sesion) {
			
			System.out.println();
			System.out.println("Ejercicio 1:");
			System.out.println();
			List<Person> dl = sesion.createQuery("from Person as pe where pe.lastName = 'Potter'").getResultList();
			for(Person p: dl) System.out.println(p.getFirstName() + " " + p.getLastName() + " - " + p.getHouse().getName());
			
		}
		
		private static void ejercicio2(Session sesion) {
			
			System.out.println();
			System.out.println("Ejercicio 2:");
			System.out.println();
			
			ScrollableResults sr = sesion.createQuery("from Person p join p.courses_1 group by p.lastName").scroll();
			while(sr.next()) {
				Person p = (Person)sr.get(0);
				System.out.println(p.getLastName() + ", " + p.getFirstName());
			}
			
			Long count = (Long)sesion.createQuery("select count(distinct p.id) from Person p join p.courses_1").uniqueResult();
			Integer total = count.intValue();
			System.out.println("Numero total de estudiantes: " + total);
		}
		
		private static void ejercicio3(Session sesion) {
			
			List<HousePoints> li = sesion.createQuery("from HousePoints as hp join hp.personByReceiver.Person as pr where pr.firstName = 'Harry' and pr.lastName = 'Potter'").getResultList();
			for(HousePoints hp: li) {
				System.out.println(hp.getPersonByGiver().getFirstName() + " -> "  + hp.getPoints() + " puntos para " 
							+ hp.getPersonByReceiver().getFirstName() +  " " +  hp.getPersonByReceiver().getLastName()) ;
			}
			
		}

}
